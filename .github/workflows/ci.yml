name: Master CI

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    outputs:
      appVersion: ${{ steps.prep.outputs.appVersion }}

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'


      - name: Build with Maven
        run: |
          mvn -B package -DskipTests

      - name: BList Jar files
        run: |
          ls -ltah

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}.jar
          path: target/${{ github.event.repository.name }}.jar

  deploy-container:

    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: target

      - name: Prepare Docker values
        id: prep
        run: |
          DOCKER_IMAGE=ghcr.io/${{ github.repository }}
          TAGS="${DOCKER_IMAGE}:${{ needs.build.outputs.appVersion }}"
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.prep.outputs.tags }}
          build-args: |
            DB_USER=${{ secrets.STORE_DB_USERNAME }}
            DB_PASS=${{ secrets.STORE_DB_PASSWORD }}
