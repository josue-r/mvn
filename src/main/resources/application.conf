# https://github.com/ben-manes/caffeine/blob/master/jcache/src/main/resources/reference.conf
# Theoretically, we should be able to rename this to `caffeine.conf` and set this propery: 
#  `spring.jpa.properties.hibernate.javax.cache.uri=caffeine.conf`.
# In practice, it's not working.

caffeine.jcache {

  # A named cache is configured by nesting a new definition under the caffeine.jcache namespace. The
  # per-cache configuration is overlaid on top of the default configuration.
  default {

    # The eviction policy for automatically removing entries from the cache
    policy {

      # The expiration thresholds before eagerly evicting an entry. These settings correspond to the
      # expiration supported natively by Caffeine where expired entries are collected during
      # maintenance operations.
      eager-expiration {
        # Specifies that each entry should be automatically removed from the cache once a fixed
        # duration has elapsed after the entry's creation, the most recent replacement of its value,
        # or its last read. Access time is reset by all cache read and write operation. This setting
        # cannot be combined with the variable configuration.
        after-access = "5m"
      }

      # The maximum bounding of the cache based upon its logical size
      maximum {
        # The maximum number of entries that can be held by the cache. This setting cannot be
        # combined with the weight configuration.
        size = 100
      }
    }
  }
  
  com.vioc.pos.vcdb.aces.domain.YearAces {
    policy {
      eager-expiration {
        # eternal
        after-access = null
      }
    }
  }
  com.vioc.pos.vcdb.aces.domain.MakeAces {
    policy {
      eager-expiration {
        # eternal
        after-access = null
      }
    }
  }
  com.vioc.pos.vcdb.aces.domain.ModelAces {
    policy {
      eager-expiration {
        # eternal
        after-access = null
      }
    }
  }

}